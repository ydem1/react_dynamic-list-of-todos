{"version":3,"sources":["types/FilterOption.ts","api.ts","components/TodoContext.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterOption","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoContext","React","createContext","todos","setTodos","filterOption","All","setFilterOption","query","setQuery","selectedIdTodo","setSelectedIdTodo","TodoContextProvider","children","turnOffLoad","useState","useEffect","todosFromServer","value","useMemo","Provider","TodoList","setModel","useContext","visibleTodos","Active","filter","todo","completed","title","toLocaleLowerCase","includes","Completed","getVisibleTodos","className","map","id","type","onClick","TodoFilter","isDeleteBtnVisible","length","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","selectedUser","setSelectedUser","isLoadingUser","setIsLoadingUser","selectedTodo","find","userId","userFromServer","href","email","name","App","isModelOpen","setIsModelOpen","isLoadingTodos","setIsLoadingTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f859a77.chunk.js","sourcesContent":["export enum FilterOption {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Todo } from '../types/Todo';\nimport { FilterOption } from '../types/FilterOption';\nimport { getTodos } from '../api';\n\ninterface TodosContextType {\n  todos: Todo[],\n  setTodos: (todos: Todo[]) => void,\n  filterOption: FilterOption,\n  setFilterOption: (filterOption: FilterOption) => void,\n  query: string,\n  setQuery: (query: string) => void,\n  selectedIdTodo: number,\n  setSelectedIdTodo: (id: number) => void,\n}\n\nexport const TodoContext = React.createContext<TodosContextType>({\n  todos: [],\n  setTodos: () => { },\n  filterOption: FilterOption.All,\n  setFilterOption: () => { },\n  query: '',\n  setQuery: () => { },\n  selectedIdTodo: 0,\n  setSelectedIdTodo: () => { },\n});\n\ntype Props = {\n  children: React.ReactNode;\n  turnOffLoad: (turnOff: boolean) => void;\n};\n\nexport const TodoContextProvider: React.FC<Props> = (\n  { children, turnOffLoad },\n) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filterOption, setFilterOption]\n    = useState<FilterOption>(FilterOption.All);\n  const [query, setQuery] = useState('');\n  const [selectedIdTodo, setSelectedIdTodo] = useState(0);\n\n  useEffect(() => {\n    getTodos()\n      .then((todosFromServer) => {\n        setTodos(todosFromServer);\n        turnOffLoad(false);\n      });\n  }, [turnOffLoad]);\n\n  const value = useMemo(() => ({\n    todos,\n    setTodos,\n    filterOption,\n    setFilterOption,\n    query,\n    setQuery,\n    selectedIdTodo,\n    setSelectedIdTodo,\n  }), [todos, filterOption, query, selectedIdTodo]);\n\n  return (\n    <TodoContext.Provider value={value}>\n      {children}\n    </TodoContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport { TodoContext } from '../TodoContext';\nimport { FilterOption } from '../../types/FilterOption';\n\ntype Props = {\n  setModel: (isOpen: boolean) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({ setModel }) => {\n  const {\n    todos,\n    filterOption,\n    query,\n    selectedIdTodo,\n    setSelectedIdTodo,\n  } = useContext(TodoContext);\n\n  const getVisibleTodos = () => {\n    switch (filterOption) {\n      case FilterOption.Active:\n        return todos.filter(todo => !todo.completed\n          && todo.title.toLocaleLowerCase()\n            .includes(query.toLocaleLowerCase()));\n\n      case FilterOption.Completed:\n        return todos.filter(todo => todo.completed\n          && todo.title.toLocaleLowerCase()\n            .includes(query.toLocaleLowerCase()));\n\n      case FilterOption.All:\n        return todos.filter(todo => todo\n          .title.toLocaleLowerCase().includes(query.toLocaleLowerCase()));\n\n      default:\n        return todos;\n    }\n  };\n\n  const visibleTodos = getVisibleTodos();\n\n  const handleClickSelectBtn = (id: number) => {\n    setModel(true);\n    setSelectedIdTodo(id);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          visibleTodos.map(todo => (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              {todo.completed ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              ) : (\n                <td className=\"is-vcentered\" />\n              )}\n              <td className=\"is-vcentered is-expanded\">\n                <p className={todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleClickSelectBtn(todo.id)}\n                >\n                  <span className=\"icon\">\n                    <i className={selectedIdTodo !== todo.id\n                      ? 'far fa-eye'\n                      : 'far fa-eye-slash'}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n","import { useContext } from 'react';\nimport { TodoContext } from '../TodoContext';\nimport { FilterOption } from '../../types/FilterOption';\n\nexport const TodoFilter = () => {\n  const { setFilterOption, query, setQuery } = useContext(TodoContext);\n  const isDeleteBtnVisible = query.length > 0;\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            onChange={(event) => (\n              setFilterOption(event.target.value as FilterOption)\n            )}\n            data-cy=\"statusSelect\"\n          >\n            <option value={FilterOption.All}>ALL</option>\n            <option value={FilterOption.Active}>Active</option>\n            <option value={FilterOption.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {isDeleteBtnVisible && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { TodoContext } from '../TodoContext';\n\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  setModel: (isOpen: boolean) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ setModel }) => {\n  const { todos, selectedIdTodo, setSelectedIdTodo } = useContext(TodoContext);\n  const [selectedUser, setSelectedUser] = useState<User>();\n  const [isLoadingUser, setIsLoadingUser] = useState(true);\n  const selectedTodo = todos.find(todo => todo.id === selectedIdTodo);\n\n  useEffect(() => {\n    getUser(selectedTodo?.userId as number)\n      .then((userFromServer) => {\n        setSelectedUser(userFromServer);\n        setIsLoadingUser(false);\n      });\n  }, [selectedTodo]);\n\n  const closeTodoModel = () => {\n    setSelectedIdTodo(0);\n    setModel(false);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {\n        isLoadingUser ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={closeTodoModel}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {/* <strong className=\"has-text-success\">Done</strong> */}\n                <strong className={selectedTodo?.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n                >\n                  {selectedTodo?.completed ? 'Done' : 'Planned'}\n                </strong>\n\n                {' by '}\n\n                <a href={`\"mailto:${selectedUser?.email}`}>\n                  {selectedUser?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoContextProvider } from './components/TodoContext';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [isModelOpen, setIsModelOpen] = useState(false);\n\n  const [isLoadingTodos, setIsLoadingTodos] = useState(true);\n\n  return (\n    <TodoContextProvider turnOffLoad={setIsLoadingTodos}>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              { isLoadingTodos && <Loader /> }\n              <TodoList setModel={setIsModelOpen} />\n            </div>\n          </div>\n        </div>\n      </div>\n      {\n        isModelOpen && <TodoModal setModel={setIsModelOpen} />\n      }\n    </TodoContextProvider>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}